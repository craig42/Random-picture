//
//  DetailsViewController.swift
//  Random picture
//
//  Created by craig on 08/07/2020.
//  Copyright (c) 2020 Craig Josse. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailsDisplayLogic: class {
  func displaySomething(viewModel: Details.ViewModel)
}

class DetailsViewController: UIViewController, DetailsDisplayLogic {
  var interactor: DetailsBusinessLogic?
  var router: (NSObjectProtocol & DetailsRoutingLogic & DetailsDataPassing)?

  // MARK: Object lifecycle
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  // MARK: Setup
  private func setup() {
    let viewController = self
    let interactor = DetailsInteractor()
    let presenter = DetailsPresenter()
    let router = DetailsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  // MARK: Routing
  override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  // MARK: View lifecycle
  override func viewDidLoad() {
    super.viewDidLoad()
    retrieveText()
  }
    @IBOutlet var detailsTextField: UILabel!
    @IBAction func okButton(_ sender: Any) {
        dismiss(animated: true, completion: nil)
    }
  func retrieveText() {
    interactor?.retrieveText()
  }
    func displaySomething(viewModel: Details.ViewModel) {
        detailsTextField.text = viewModel.message
  }
}
